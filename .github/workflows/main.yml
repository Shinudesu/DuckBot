name: Test & Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14.x]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile --check-files

      - name: Run formatter
        run: yarn format

      - name: Run eslint
        run: yarn lint

      - name: Run build
        run: yarn build

  deploy:
    name: Deploy to heroku

    needs: build

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14.x]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Deploy to heroku
        uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "${{ secrets.HEROKU_APP_NAME }}"
          heroku_email: "${{ secrets.HEROKU_USER_EMAIL }}"
          procfile: "worker: yarn start"
        env:
          HD_NPM_CONFIG_PRODUCTION: false
          HD_YARN_PRODUCTION: false
          HD_DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          HD_DETECTLANGUAGE_API_KEY: ${{ secrets.DETECTLANGUAGE_API_KEY }}
          HD_RAPID_API_KEY: ${{ secrets.RAPID_API_KEY }}
          HD_DEVELOPER_TEST_SERVER: ${{ secrets.DEVELOPER_TEST_SERVER }}
          HD_OWNER_IDS: ${{ secrets.OWNER_IDS }}
          HD_PREFIX: ${{ secrets.PREFIX }}
          HD_REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          HD_REDDIT_SECRET_KEY: ${{ secrets.REDDIT_SECRET_KEY }}
          HD_REDDIT_REFRESH_TOKEN: ${{ secrets.REDDIT_REFRESH_TOKEN }}
          REDDIT_ACCESS_TOKEN: ${{ secrets.REDDIT_ACCESS_TOKEN }}
          HD_RESET_COMMANDS: false
